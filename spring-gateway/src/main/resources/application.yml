server:
  port: 10086   # 网关端口
spring:
  application:
    name: gateway # 服务名称
  cloud:
    nacos:
      server-addr: localhost:8848    # nacos 地址
    gateway:
      # 网关路由配置
      routes:
        - id: user-service      # 路由id，自定义，只要唯一即可
          # uri: http://127.0.0.1:8081   # 路由的目标地址 (直接写死地址的方式，不推荐)
          uri: lb://userservice    # 路由的目标地址 lb是负载均衡，后面跟服务名称(推荐),lb是负载均衡，根据服务名拉取服务列表，实现负载均衡。
          predicates:       # 路由断言，判断请求是否符合路由规则的条件
            - Path=/user/**      # 按照路径匹配，以/user/开头的请求就符合要求
        - id: card-service
          uri: lb://cardservice
          predicates:
            - Path=/card/**
          filters: # 对请求或响应做处理
            - AddRequestHeader=token, test # 添加请求头，给所有进入cardservice的请求添加一个请求头。请求头的key为token，value为test。
      default-filters: # 会对routes配置的所有路由都生效。
        - AddRequestHeader=token, test  # 添加请求头
      # 全局的跨域配置
      globalcors:
        add-to-simple-url-handler-mapping: true # 解决options请求被拦截问题
          # options请求 就是一种询问服务器是否浏览器可以跨域的请求
          # 如果每次跨域都有询问服务器是否浏览器可以跨域对性能也是损耗
        # 可以配置本次跨域检测的有效期maxAge
        # 在maxAge设置的时间范围内，不去询问，统统允许跨域
        corsConfigurations:
          '[/**]':
            allowedOrigins: # 允许哪些网站的跨域请求
              - "http://localhost:8090"
            allowedMethods: # 允许的跨域ajax的请求方式
              - "GET"
              - "POST"
              - "DELETE"
              - "PUT"
              - "OPTIONS"
            allowedHeaders: "*"  # 允许在请求中携带的头信息
            allowCredentials: true # 允许在请求中携带cookie
            maxAge: 360000    # 本次跨域检测的有效期(单位毫秒)
            # 有效期内，跨域请求不会一直发option请求去增大服务器压力